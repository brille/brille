name: Main

on:
  push:
  pull_request:

concurrency :
  group: ${{ github.workflow }}-${{ github.ref == 'refs/head/main' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  cmake_and_ctest:
    name: CMake & CTest, ${{ matrix.variant.os }}, py${{ matrix.python-version }}
    runs-on: ${{ matrix.variant.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        variant:
          - {os: ubuntu-22.04, cmake-preset: gha-test-ubuntu }
          - {os: macos-12, cmake-preset: gha-test-macos }
          - {os: windows-2022, cmake-preset: gha-test-windows }
        python-version: ["3.10"]
        cmake-type: ['Release']

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup micromamba environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          micromamba-version: "1.1.0"
          environment-file: .github/config/${{ matrix.variant.cmake-preset }}.yml
          cache-env: true
          extra-specs: python=${{ matrix.python-version }}
      - run: echo "pythonInterpreter=`which python`" >> $GITHUB_ENV
      - if: startsWith(matrix.variant.os, 'macos')
        run: brew install tree; tree /Users/runner/.conan || echo "No conan directory"
      - name: configure
        run: cmake -S . -B build -D CMAKE_BUILD_TYPE=${{ matrix.cmake-type }} -D PYTHON3_EXECUTABLE=${{ env.pythonInterpreter }}
      - if: startsWith(matrix.variant.os, 'macos')
        run: tree /Users/runner/.conan || echo "No conan directory"
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1.1.0
        id: cpu-cores
      - name: build
        run: cmake --build build --config ${{ matrix.cmake-type }} --parallel ${{ steps.cpu-cores.outputs.count }}
      - name: test
        working-directory: build
        run: ctest -C ${{ matrix.cmake-type }} --output-on-failure --parallel ${{ steps.cpu-cores.outputs.count }}
