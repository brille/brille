name: Main

on:
  push:
  pull_request:
#  workflow_dispatch:
#    inputs:
#      debug_enabled:
#        type: boolean
#        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
#        required: false
#        default: false

concurrency :
  group: "${{ github.workflow }}-${{ github.ref == 'refs/head/main' && github.run_number || github.ref }}"
  cancel-in-progress: true

jobs:
  cmake_and_ctest:
    name: "CMake & CTest, ${{ matrix.variant.os }}, py${{ matrix.python-version }}"
    runs-on: ${{ matrix.variant.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        variant:
          - { os: ubuntu-22.04} # current Ubuntu latest
          - { os: macos-13}     # last Intel macOS
          - { os: macos-14}     # current macOS latest, arm64
          - { os: windows-2022} # current Windows latest
        python-version: ["3.10"]
        cmake-type: ['Release']

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python-based dependencies
        run: |
          python -m pip install setuptools_scm conan numpy
          echo "pythonInterpreter=`which python`" >> $GITHUB_ENV

      - name: Cache conan setup
        id: conan-cache-key
        run: |
          echo "key=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT
          echo "path=$(conan config home)" >> $GITHUB_OUTPUT

      - name: Cache conan
        uses: actions/cache@v4
        with:
          path: ${{ steps.conan-cache-key.outputs.path }}
          key: conan-${{ matrix.variant.os }}-${{ steps.conan-cache-key.outputs.key }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: configure
        run: cmake -S . -B build -D CMAKE_BUILD_TYPE=${{ matrix.cmake-type }} -D Python3_EXECUTABLE=${{ env.pythonInterpreter }}

      - name: build
        run: cmake --build build --config ${{ matrix.cmake-type }} -j

#      - name: Setup tmate session on failure
#        uses: mxschmitt/action-tmate@v3
#        # if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled && failure() }}
#        if: ${{ failure() }}

      - name: test
        working-directory: build
        run: ctest -C ${{ matrix.cmake-type }} --verbose -j
