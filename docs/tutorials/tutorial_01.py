import numpy as np
import brille
# -F 4 2 3 motions stored as stack(W, 2*w, dim=1) with shape (N_motions, 4, 3)
motions = np.array([[[ 1,  0,  0], [ 0,  1,  0], [ 0,  0,  1], [0, 0, 0]],
                    [[-1,  0,  0], [ 0, -1,  0], [ 0,  0, -1], [0, 0, 0]],
                    [[ 0, -1,  0], [ 1,  0,  0], [ 0,  0,  1], [0, 0, 0]],
                    [[ 0,  1,  0], [-1,  0,  0], [ 0,  0, -1], [0, 0, 0]],
                    [[-1,  0,  0], [ 0, -1,  0], [ 0,  0,  1], [0, 0, 0]],
                    [[ 1,  0,  0], [ 0,  1,  0], [ 0,  0, -1], [0, 0, 0]],
                    [[ 0,  1,  0], [-1,  0,  0], [ 0,  0,  1], [0, 0, 0]],
                    [[ 0, -1,  0], [ 1,  0,  0], [ 0,  0, -1], [0, 0, 0]],
                    [[ 1,  0,  0], [ 0, -1,  0], [ 0,  0, -1], [0, 0, 0]],
                    [[-1,  0,  0], [ 0,  1,  0], [ 0,  0,  1], [0, 0, 0]],
                    [[ 0, -1,  0], [-1,  0,  0], [ 0,  0, -1], [0, 0, 0]],
                    [[ 0,  1,  0], [ 1,  0,  0], [ 0,  0,  1], [0, 0, 0]],
                    [[-1,  0,  0], [ 0,  1,  0], [ 0,  0, -1], [0, 0, 0]],
                    [[ 1,  0,  0], [ 0, -1,  0], [ 0,  0,  1], [0, 0, 0]],
                    [[ 0,  1,  0], [ 1,  0,  0], [ 0,  0, -1], [0, 0, 0]],
                    [[ 0, -1,  0], [-1,  0,  0], [ 0,  0,  1], [0, 0, 0]],
                    [[ 0,  0,  1], [ 1,  0,  0], [ 0,  1,  0], [0, 0, 0]],
                    [[ 0,  0, -1], [-1,  0,  0], [ 0, -1,  0], [0, 0, 0]],
                    [[ 0,  0,  1], [ 0, -1,  0], [ 1,  0,  0], [0, 0, 0]],
                    [[ 0,  0, -1], [ 0,  1,  0], [-1,  0,  0], [0, 0, 0]],
                    [[ 0,  0,  1], [-1,  0,  0], [ 0, -1,  0], [0, 0, 0]],
                    [[ 0,  0, -1], [ 1,  0,  0], [ 0,  1,  0], [0, 0, 0]],
                    [[ 0,  0,  1], [ 0,  1,  0], [-1,  0,  0], [0, 0, 0]],
                    [[ 0,  0, -1], [ 0, -1,  0], [ 1,  0,  0], [0, 0, 0]],
                    [[ 0,  0, -1], [ 1,  0,  0], [ 0, -1,  0], [0, 0, 0]],
                    [[ 0,  0,  1], [-1,  0,  0], [ 0,  1,  0], [0, 0, 0]],
                    [[ 0,  0, -1], [ 0, -1,  0], [-1,  0,  0], [0, 0, 0]],
                    [[ 0,  0,  1], [ 0,  1,  0], [ 1,  0,  0], [0, 0, 0]],
                    [[ 0,  0, -1], [-1,  0,  0], [ 0,  1,  0], [0, 0, 0]],
                    [[ 0,  0,  1], [ 1,  0,  0], [ 0, -1,  0], [0, 0, 0]],
                    [[ 0,  0, -1], [ 0,  1,  0], [ 1,  0,  0], [0, 0, 0]],
                    [[ 0,  0,  1], [ 0, -1,  0], [-1,  0,  0], [0, 0, 0]],
                    [[ 0,  1,  0], [ 0,  0,  1], [ 1,  0,  0], [0, 0, 0]],
                    [[ 0, -1,  0], [ 0,  0, -1], [-1,  0,  0], [0, 0, 0]],
                    [[ 1,  0,  0], [ 0,  0,  1], [ 0, -1,  0], [0, 0, 0]],
                    [[-1,  0,  0], [ 0,  0, -1], [ 0,  1,  0], [0, 0, 0]],
                    [[ 0, -1,  0], [ 0,  0,  1], [-1,  0,  0], [0, 0, 0]],
                    [[ 0,  1,  0], [ 0,  0, -1], [ 1,  0,  0], [0, 0, 0]],
                    [[-1,  0,  0], [ 0,  0,  1], [ 0,  1,  0], [0, 0, 0]],
                    [[ 1,  0,  0], [ 0,  0, -1], [ 0, -1,  0], [0, 0, 0]],
                    [[ 0, -1,  0], [ 0,  0, -1], [ 1,  0,  0], [0, 0, 0]],
                    [[ 0,  1,  0], [ 0,  0,  1], [-1,  0,  0], [0, 0, 0]],
                    [[-1,  0,  0], [ 0,  0, -1], [ 0, -1,  0], [0, 0, 0]],
                    [[ 1,  0,  0], [ 0,  0,  1], [ 0,  1,  0], [0, 0, 0]],
                    [[ 0,  1,  0], [ 0,  0, -1], [-1,  0,  0], [0, 0, 0]],
                    [[ 0, -1,  0], [ 0,  0,  1], [ 1,  0,  0], [0, 0, 0]],
                    [[ 1,  0,  0], [ 0,  0, -1], [ 0,  1,  0], [0, 0, 0]],
                    [[-1,  0,  0], [ 0,  0,  1], [ 0, -1,  0], [0, 0, 0]],
                    [[ 1,  0,  0], [ 0,  1,  0], [ 0,  0,  1], [1, 1, 0]],
                    [[-1,  0,  0], [ 0, -1,  0], [ 0,  0, -1], [1, 1, 0]],
                    [[ 0, -1,  0], [ 1,  0,  0], [ 0,  0,  1], [1, 1, 0]],
                    [[ 0,  1,  0], [-1,  0,  0], [ 0,  0, -1], [1, 1, 0]],
                    [[-1,  0,  0], [ 0, -1,  0], [ 0,  0,  1], [1, 1, 0]],
                    [[ 1,  0,  0], [ 0,  1,  0], [ 0,  0, -1], [1, 1, 0]],
                    [[ 0,  1,  0], [-1,  0,  0], [ 0,  0,  1], [1, 1, 0]],
                    [[ 0, -1,  0], [ 1,  0,  0], [ 0,  0, -1], [1, 1, 0]],
                    [[ 1,  0,  0], [ 0, -1,  0], [ 0,  0, -1], [1, 1, 0]],
                    [[-1,  0,  0], [ 0,  1,  0], [ 0,  0,  1], [1, 1, 0]],
                    [[ 0, -1,  0], [-1,  0,  0], [ 0,  0, -1], [1, 1, 0]],
                    [[ 0,  1,  0], [ 1,  0,  0], [ 0,  0,  1], [1, 1, 0]],
                    [[-1,  0,  0], [ 0,  1,  0], [ 0,  0, -1], [1, 1, 0]],
                    [[ 1,  0,  0], [ 0, -1,  0], [ 0,  0,  1], [1, 1, 0]],
                    [[ 0,  1,  0], [ 1,  0,  0], [ 0,  0, -1], [1, 1, 0]],
                    [[ 0, -1,  0], [-1,  0,  0], [ 0,  0,  1], [1, 1, 0]],
                    [[ 0,  0,  1], [ 1,  0,  0], [ 0,  1,  0], [1, 1, 0]],
                    [[ 0,  0, -1], [-1,  0,  0], [ 0, -1,  0], [1, 1, 0]],
                    [[ 0,  0,  1], [ 0, -1,  0], [ 1,  0,  0], [1, 1, 0]],
                    [[ 0,  0, -1], [ 0,  1,  0], [-1,  0,  0], [1, 1, 0]],
                    [[ 0,  0,  1], [-1,  0,  0], [ 0, -1,  0], [1, 1, 0]],
                    [[ 0,  0, -1], [ 1,  0,  0], [ 0,  1,  0], [1, 1, 0]],
                    [[ 0,  0,  1], [ 0,  1,  0], [-1,  0,  0], [1, 1, 0]],
                    [[ 0,  0, -1], [ 0, -1,  0], [ 1,  0,  0], [1, 1, 0]],
                    [[ 0,  0, -1], [ 1,  0,  0], [ 0, -1,  0], [1, 1, 0]],
                    [[ 0,  0,  1], [-1,  0,  0], [ 0,  1,  0], [1, 1, 0]],
                    [[ 0,  0, -1], [ 0, -1,  0], [-1,  0,  0], [1, 1, 0]],
                    [[ 0,  0,  1], [ 0,  1,  0], [ 1,  0,  0], [1, 1, 0]],
                    [[ 0,  0, -1], [-1,  0,  0], [ 0,  1,  0], [1, 1, 0]],
                    [[ 0,  0,  1], [ 1,  0,  0], [ 0, -1,  0], [1, 1, 0]],
                    [[ 0,  0, -1], [ 0,  1,  0], [ 1,  0,  0], [1, 1, 0]],
                    [[ 0,  0,  1], [ 0, -1,  0], [-1,  0,  0], [1, 1, 0]],
                    [[ 0,  1,  0], [ 0,  0,  1], [ 1,  0,  0], [1, 1, 0]],
                    [[ 0, -1,  0], [ 0,  0, -1], [-1,  0,  0], [1, 1, 0]],
                    [[ 1,  0,  0], [ 0,  0,  1], [ 0, -1,  0], [1, 1, 0]],
                    [[-1,  0,  0], [ 0,  0, -1], [ 0,  1,  0], [1, 1, 0]],
                    [[ 0, -1,  0], [ 0,  0,  1], [-1,  0,  0], [1, 1, 0]],
                    [[ 0,  1,  0], [ 0,  0, -1], [ 1,  0,  0], [1, 1, 0]],
                    [[-1,  0,  0], [ 0,  0,  1], [ 0,  1,  0], [1, 1, 0]],
                    [[ 1,  0,  0], [ 0,  0, -1], [ 0, -1,  0], [1, 1, 0]],
                    [[ 0, -1,  0], [ 0,  0, -1], [ 1,  0,  0], [1, 1, 0]],
                    [[ 0,  1,  0], [ 0,  0,  1], [-1,  0,  0], [1, 1, 0]],
                    [[-1,  0,  0], [ 0,  0, -1], [ 0, -1,  0], [1, 1, 0]],
                    [[ 1,  0,  0], [ 0,  0,  1], [ 0,  1,  0], [1, 1, 0]],
                    [[ 0,  1,  0], [ 0,  0, -1], [-1,  0,  0], [1, 1, 0]],
                    [[ 0, -1,  0], [ 0,  0,  1], [ 1,  0,  0], [1, 1, 0]],
                    [[ 1,  0,  0], [ 0,  0, -1], [ 0,  1,  0], [1, 1, 0]],
                    [[-1,  0,  0], [ 0,  0,  1], [ 0, -1,  0], [1, 1, 0]],
                    [[ 1,  0,  0], [ 0,  1,  0], [ 0,  0,  1], [1, 0, 1]],
                    [[-1,  0,  0], [ 0, -1,  0], [ 0,  0, -1], [1, 0, 1]],
                    [[ 0, -1,  0], [ 1,  0,  0], [ 0,  0,  1], [1, 0, 1]],
                    [[ 0,  1,  0], [-1,  0,  0], [ 0,  0, -1], [1, 0, 1]],
                    [[-1,  0,  0], [ 0, -1,  0], [ 0,  0,  1], [1, 0, 1]],
                    [[ 1,  0,  0], [ 0,  1,  0], [ 0,  0, -1], [1, 0, 1]],
                    [[ 0,  1,  0], [-1,  0,  0], [ 0,  0,  1], [1, 0, 1]],
                    [[ 0, -1,  0], [ 1,  0,  0], [ 0,  0, -1], [1, 0, 1]],
                    [[ 1,  0,  0], [ 0, -1,  0], [ 0,  0, -1], [1, 0, 1]],
                    [[-1,  0,  0], [ 0,  1,  0], [ 0,  0,  1], [1, 0, 1]],
                    [[ 0, -1,  0], [-1,  0,  0], [ 0,  0, -1], [1, 0, 1]],
                    [[ 0,  1,  0], [ 1,  0,  0], [ 0,  0,  1], [1, 0, 1]],
                    [[-1,  0,  0], [ 0,  1,  0], [ 0,  0, -1], [1, 0, 1]],
                    [[ 1,  0,  0], [ 0, -1,  0], [ 0,  0,  1], [1, 0, 1]],
                    [[ 0,  1,  0], [ 1,  0,  0], [ 0,  0, -1], [1, 0, 1]],
                    [[ 0, -1,  0], [-1,  0,  0], [ 0,  0,  1], [1, 0, 1]],
                    [[ 0,  0,  1], [ 1,  0,  0], [ 0,  1,  0], [1, 0, 1]],
                    [[ 0,  0, -1], [-1,  0,  0], [ 0, -1,  0], [1, 0, 1]],
                    [[ 0,  0,  1], [ 0, -1,  0], [ 1,  0,  0], [1, 0, 1]],
                    [[ 0,  0, -1], [ 0,  1,  0], [-1,  0,  0], [1, 0, 1]],
                    [[ 0,  0,  1], [-1,  0,  0], [ 0, -1,  0], [1, 0, 1]],
                    [[ 0,  0, -1], [ 1,  0,  0], [ 0,  1,  0], [1, 0, 1]],
                    [[ 0,  0,  1], [ 0,  1,  0], [-1,  0,  0], [1, 0, 1]],
                    [[ 0,  0, -1], [ 0, -1,  0], [ 1,  0,  0], [1, 0, 1]],
                    [[ 0,  0, -1], [ 1,  0,  0], [ 0, -1,  0], [1, 0, 1]],
                    [[ 0,  0,  1], [-1,  0,  0], [ 0,  1,  0], [1, 0, 1]],
                    [[ 0,  0, -1], [ 0, -1,  0], [-1,  0,  0], [1, 0, 1]],
                    [[ 0,  0,  1], [ 0,  1,  0], [ 1,  0,  0], [1, 0, 1]],
                    [[ 0,  0, -1], [-1,  0,  0], [ 0,  1,  0], [1, 0, 1]],
                    [[ 0,  0,  1], [ 1,  0,  0], [ 0, -1,  0], [1, 0, 1]],
                    [[ 0,  0, -1], [ 0,  1,  0], [ 1,  0,  0], [1, 0, 1]],
                    [[ 0,  0,  1], [ 0, -1,  0], [-1,  0,  0], [1, 0, 1]],
                    [[ 0,  1,  0], [ 0,  0,  1], [ 1,  0,  0], [1, 0, 1]],
                    [[ 0, -1,  0], [ 0,  0, -1], [-1,  0,  0], [1, 0, 1]],
                    [[ 1,  0,  0], [ 0,  0,  1], [ 0, -1,  0], [1, 0, 1]],
                    [[-1,  0,  0], [ 0,  0, -1], [ 0,  1,  0], [1, 0, 1]],
                    [[ 0, -1,  0], [ 0,  0,  1], [-1,  0,  0], [1, 0, 1]],
                    [[ 0,  1,  0], [ 0,  0, -1], [ 1,  0,  0], [1, 0, 1]],
                    [[-1,  0,  0], [ 0,  0,  1], [ 0,  1,  0], [1, 0, 1]],
                    [[ 1,  0,  0], [ 0,  0, -1], [ 0, -1,  0], [1, 0, 1]],
                    [[ 0, -1,  0], [ 0,  0, -1], [ 1,  0,  0], [1, 0, 1]],
                    [[ 0,  1,  0], [ 0,  0,  1], [-1,  0,  0], [1, 0, 1]],
                    [[-1,  0,  0], [ 0,  0, -1], [ 0, -1,  0], [1, 0, 1]],
                    [[ 1,  0,  0], [ 0,  0,  1], [ 0,  1,  0], [1, 0, 1]],
                    [[ 0,  1,  0], [ 0,  0, -1], [-1,  0,  0], [1, 0, 1]],
                    [[ 0, -1,  0], [ 0,  0,  1], [ 1,  0,  0], [1, 0, 1]],
                    [[ 1,  0,  0], [ 0,  0, -1], [ 0,  1,  0], [1, 0, 1]],
                    [[-1,  0,  0], [ 0,  0,  1], [ 0, -1,  0], [1, 0, 1]],
                    [[ 1,  0,  0], [ 0,  1,  0], [ 0,  0,  1], [0, 1, 1]],
                    [[-1,  0,  0], [ 0, -1,  0], [ 0,  0, -1], [0, 1, 1]],
                    [[ 0, -1,  0], [ 1,  0,  0], [ 0,  0,  1], [0, 1, 1]],
                    [[ 0,  1,  0], [-1,  0,  0], [ 0,  0, -1], [0, 1, 1]],
                    [[-1,  0,  0], [ 0, -1,  0], [ 0,  0,  1], [0, 1, 1]],
                    [[ 1,  0,  0], [ 0,  1,  0], [ 0,  0, -1], [0, 1, 1]],
                    [[ 0,  1,  0], [-1,  0,  0], [ 0,  0,  1], [0, 1, 1]],
                    [[ 0, -1,  0], [ 1,  0,  0], [ 0,  0, -1], [0, 1, 1]],
                    [[ 1,  0,  0], [ 0, -1,  0], [ 0,  0, -1], [0, 1, 1]],
                    [[-1,  0,  0], [ 0,  1,  0], [ 0,  0,  1], [0, 1, 1]],
                    [[ 0, -1,  0], [-1,  0,  0], [ 0,  0, -1], [0, 1, 1]],
                    [[ 0,  1,  0], [ 1,  0,  0], [ 0,  0,  1], [0, 1, 1]],
                    [[-1,  0,  0], [ 0,  1,  0], [ 0,  0, -1], [0, 1, 1]],
                    [[ 1,  0,  0], [ 0, -1,  0], [ 0,  0,  1], [0, 1, 1]],
                    [[ 0,  1,  0], [ 1,  0,  0], [ 0,  0, -1], [0, 1, 1]],
                    [[ 0, -1,  0], [-1,  0,  0], [ 0,  0,  1], [0, 1, 1]],
                    [[ 0,  0,  1], [ 1,  0,  0], [ 0,  1,  0], [0, 1, 1]],
                    [[ 0,  0, -1], [-1,  0,  0], [ 0, -1,  0], [0, 1, 1]],
                    [[ 0,  0,  1], [ 0, -1,  0], [ 1,  0,  0], [0, 1, 1]],
                    [[ 0,  0, -1], [ 0,  1,  0], [-1,  0,  0], [0, 1, 1]],
                    [[ 0,  0,  1], [-1,  0,  0], [ 0, -1,  0], [0, 1, 1]],
                    [[ 0,  0, -1], [ 1,  0,  0], [ 0,  1,  0], [0, 1, 1]],
                    [[ 0,  0,  1], [ 0,  1,  0], [-1,  0,  0], [0, 1, 1]],
                    [[ 0,  0, -1], [ 0, -1,  0], [ 1,  0,  0], [0, 1, 1]],
                    [[ 0,  0, -1], [ 1,  0,  0], [ 0, -1,  0], [0, 1, 1]],
                    [[ 0,  0,  1], [-1,  0,  0], [ 0,  1,  0], [0, 1, 1]],
                    [[ 0,  0, -1], [ 0, -1,  0], [-1,  0,  0], [0, 1, 1]],
                    [[ 0,  0,  1], [ 0,  1,  0], [ 1,  0,  0], [0, 1, 1]],
                    [[ 0,  0, -1], [-1,  0,  0], [ 0,  1,  0], [0, 1, 1]],
                    [[ 0,  0,  1], [ 1,  0,  0], [ 0, -1,  0], [0, 1, 1]],
                    [[ 0,  0, -1], [ 0,  1,  0], [ 1,  0,  0], [0, 1, 1]],
                    [[ 0,  0,  1], [ 0, -1,  0], [-1,  0,  0], [0, 1, 1]],
                    [[ 0,  1,  0], [ 0,  0,  1], [ 1,  0,  0], [0, 1, 1]],
                    [[ 0, -1,  0], [ 0,  0, -1], [-1,  0,  0], [0, 1, 1]],
                    [[ 1,  0,  0], [ 0,  0,  1], [ 0, -1,  0], [0, 1, 1]],
                    [[-1,  0,  0], [ 0,  0, -1], [ 0,  1,  0], [0, 1, 1]],
                    [[ 0, -1,  0], [ 0,  0,  1], [-1,  0,  0], [0, 1, 1]],
                    [[ 0,  1,  0], [ 0,  0, -1], [ 1,  0,  0], [0, 1, 1]],
                    [[-1,  0,  0], [ 0,  0,  1], [ 0,  1,  0], [0, 1, 1]],
                    [[ 1,  0,  0], [ 0,  0, -1], [ 0, -1,  0], [0, 1, 1]],
                    [[ 0, -1,  0], [ 0,  0, -1], [ 1,  0,  0], [0, 1, 1]],
                    [[ 0,  1,  0], [ 0,  0,  1], [-1,  0,  0], [0, 1, 1]],
                    [[-1,  0,  0], [ 0,  0, -1], [ 0, -1,  0], [0, 1, 1]],
                    [[ 1,  0,  0], [ 0,  0,  1], [ 0,  1,  0], [0, 1, 1]],
                    [[ 0,  1,  0], [ 0,  0, -1], [-1,  0,  0], [0, 1, 1]],
                    [[ 0, -1,  0], [ 0,  0,  1], [ 1,  0,  0], [0, 1, 1]],
                    [[ 1,  0,  0], [ 0,  0, -1], [ 0,  1,  0], [0, 1, 1]],
                    [[-1,  0,  0], [ 0,  0,  1], [ 0, -1,  0], [0, 1, 1]]])
motions_W, motions_w = motions[:, :3, :], motions[:, 3, :]*0.5

explicit_sym = brille.Symmetry(motions_W, motions_w)
explicit_gen = sym.generators()

hall_symbol = brille.HallSymbol('-F 4 2 3')
hall_gen = hall_symbol.generators
hall_sym = hall_gen.generate()

if hall_gen == explicit_gen:
    print('The explicit and Hall symbol generators are the same, by chance')
else:
    print(f"There are {explicit_gen.size} explicit generators but {hall_gen.size} Hall symbol generators.")
    print("\t(Since generators of a group are not unique, this is OK)")

if hall_sym != explicit_sym:
    print('Something has gone horribly wrong')
else:
    print('The generated space groups are equivalent! (All is well.)')
    if np.all(hall_sym.W == explicit_sym.W):
        print("\tWe're extra lucky that the groups have the same-ordered motions")
    else:
        print("\tSymmetry group equivalency does not imply same-ordered motions")

# Now construct the lattice a few ways:
# -F 4 3 2 is a cubic system, so all lattice basis vector lengths are the same
lat_parameters_hall_symbol = brille.Lattice((1, 1, 1), (90, 90, 90), '-F 4 3 2')
# we can also provide explicit basis vectors as a matrix
# a possible pitfall: brille stores the orientation of the basis vectors
bv = lambda t: np.array([[np.cos(t), 0, np.sin(t)],[0, 1, 0], [-np.sin(t), 0, np.cos(t)]])
lat_basis_hall_symbol = brille.Lattice(bv(np.random.rand()*np.pi), '-F 4 3 2')

if lat_basis_hall_symbol != lat_parameters_hall_symbol:
    print('Something has gone wrong creating the Direct lattices')

p1_cube = brille.Latice((1, 1, 1), (90, 90, 90))
# another potential pitfall, lattice equivalency does not consider spacegroups
if lat_basis_hall_symbol == p1_cube:
    print('brille Lattice equivalency ignores the Spacegroup information')
if lat_basis_hall_symbol.spacegroup != p1_cube.spacegroup:
    print('\tSo explicit checks of the spacegroup may be necessary')

for sym in (explicit_sym, explicit_gen, hall_sym, hall_gen):
    # Specifying the spacegroup from Symmetry can be done at construction, and generates the full group
    lat = brille.Lattice((1, 1, 1), (90, 90, 90), sym)
    if lat_basis_hall_symbol.spacegroup != lat.spacegroup:
        print('Something wrong with Lattice spacegroup assignment')
